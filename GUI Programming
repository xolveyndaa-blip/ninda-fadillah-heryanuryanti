import tkinter as tk
from tkinter import messagebox

class AplikasiKalkulator:
    def __init__(self, root):
        self.root = root
        self.root.title("Kalkulator")
        self.root.geometry("300x400")
        self.root.resizable(False, False)

        # Variabel ekspresi dan tampilan
        self.expression = ""
        self.input_var = tk.StringVar(value="")

        self.setup_ui()

    def setup_ui(self):
        # Frame tampilan
        display_frame = self.buat_display_frame()
        display_frame.pack(padx=10)

        # Frame tombol
        button_frame = self.buat_button_frame()
        button_frame.pack(pady=10)

    def buat_display_frame(self):
        frame = tk.Frame(self.root)
        entry = tk.Entry(
            frame,
            textvariable=self.input_var,
            font=("Arial", 18),
            justify=tk.RIGHT,
            state="readonly",
            readonlybackground="white",
            fg="black"
        )
        entry.pack(fill=tk.X, padx=10, pady=10)
        return frame

    def buat_button_frame(self):
        frame = tk.Frame(self.root)

        # Layout tombol
        buttons = [
            ['7', '8', '9', '/'],
            ['4', '5', '6', '*'],
            ['1', '2', '3', '-'],
            ['0', '.', '=', '+'],
            ['C', 'CE',]
        ]

        for i, row in enumerate(buttons):
            for j, text in enumerate(row):
                btn = tk.Button(
                    frame,
                    text=text,
                    width=5,
                    height=2,
                    font=("Arial", 12)
                )

                if text == '=':
                    btn.config(command=self.hitung_hasil, bg="orange", fg="white")
                elif text in ['C', 'CE']:
                    btn.config(command=lambda x=text: self.clear_input(x), bg="red", fg="white")
                else:
                    btn.config(command=lambda x=text: self.tambah_input(x))

                btn.grid(row=i, column=j, padx=2, pady=2)
        
        return frame

    def tambah_input(self, value):
        self.expression += str(value)
        self.input_var.set(self.expression)

    def hitung_hasil(self):
        try:
            # Gunakan eval untuk menghitung ekspresi string
            result = str(eval(self.expression))
            self.input_var.set(result)
            self.expression = result
        except Exception as error:
            messagebox.showerror("Kesalahan", "Ekspresi tidak valid!")
            self.expression = ""
            self.input_var.set(self.expression)

    def clear_input(self, clear_type):
        if clear_type == 'C':
            # Clear All (C)
            self.expression = ""
        elif clear_type == 'CE':
            # Clear Entry (CE) - Menghapus karakter terakhir
            self.expression = self.expression[:-1]
            
        self.input_var.set(self.expression)

    def jalankan(self):
        self.root.mainloop()

# Eksekusi program
if __name__ == "__main__":
    app_root = tk.Tk()
    kalkulator = AplikasiKalkulator(app_root)
    kalkulator.jalankan()